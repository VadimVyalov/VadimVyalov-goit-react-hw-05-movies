{"version":3,"file":"static/js/599.cd6fc3c7.chunk.js","mappings":"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","sources":["components/Loader/Loader.stiled.js","components/Loader/Loader.jsx","components/MoviesList/MoviesList.jsx","components/SharedLayout/SharedLayout.styled.js","components/Searchbar/Searchbar.styled.js","components/Searchbar/Searchbar.jsx","pages/Movies/Movies.jsx","tools/apiGet.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const LoaderWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n","import { RotatingLines } from 'react-loader-spinner';\nimport { LoaderWrapper } from './Loader.stiled';\nconst Loader = () => (\n  <LoaderWrapper>\n    <RotatingLines\n      strokeColor=\"#3f51b5\"\n      strokeWidth=\"4\"\n      animationDuration=\"1\"\n      width=\"70\"\n      visible={true}\n    />\n  </LoaderWrapper>\n);\n\nexport default Loader;\n","import { Link } from 'components/SharedLayout/SharedLayout.styled';\nconst MoviesList = ({ films, location }) => (\n  <ul>\n    {films.map(item => (\n      <li key={item.id}>\n        <Link to={`/Movies/${item.id}`} state={{ from: location }}>\n          {item.name} {item.original_title}\n        </Link>\n      </li>\n    ))}\n  </ul>\n);\nexport default MoviesList;\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Container = styled.div`\n  max-width: 1280px;\n  margin: 0 auto;\n  padding: 0 16px;\n`;\n\nexport const Header = styled.header`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  gap: 12px;\n  padding: 8px 0;\n  margin-bottom: 16px;\n  border-bottom: 1px solid black;\n\n  > nav {\n    display: flex;\n  }\n`;\n\nexport const Link = styled(NavLink)`\n  padding: 8px 16px;\n  border-radius: 4px;\n  text-decoration: none;\n  color: black;\n  font-weight: 500;\n\n  &.active {\n    color: white;\n    background-color: orangered;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Header = styled.div`\n  top: 0;\n  left: 0;\n  position: sticky;\n  z-index: 1100;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 64px;\n  padding-right: 24px;\n  padding-left: 24px;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  color: #fff;\n  background-color: #3f51b5;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n  form {\n    display: flex;\n    align-items: center;\n    width: 100%;\n    max-width: 600px;\n    background-color: #fff;\n    border-radius: 3px;\n    overflow: hidden;\n    button {\n      display: inline-block;\n      /* font-size: 0;\n      line-height: 0; */\n      width: 48px;\n      height: 48px;\n      border: 0;\n      background-color: inherit;\n      color: #3f51b5;\n      opacity: 0.6;\n      transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n      cursor: pointer;\n      outline: none;\n      span {\n        position: absolute;\n        width: 1px;\n        height: 1px;\n        padding: 0;\n        overflow: hidden;\n        clip: rect(0, 0, 0, 0);\n        white-space: nowrap;\n        clip-path: inset(50%);\n        border: 0;\n      }\n      svg {\n        display: block;\n        height: 100%;\n        width: 100%;\n      }\n      :hover {\n        opacity: 1;\n      }\n    }\n    input {\n      display: inline-block;\n      width: 100%;\n      font: inherit;\n      font-size: 20px;\n      line-height: 1.5;\n      border: none;\n      outline: none;\n      padding-left: 4px;\n      padding-right: 4px;\n\n      :placeholder {\n        font: inherit;\n        font-size: 18px;\n      }\n    }\n  }\n`;\n\nexport const SearchForm = styled.form``;\n","import PropTypes from 'prop-types';\nimport { Header } from './Searchbar.styled';\nimport { MdOutlineImageSearch } from 'react-icons/md';\nconst Searchbar = ({ onSubmit }) => (\n  <Header>\n    <form onSubmit={onSubmit}>\n      <button type=\"submit\">\n        <MdOutlineImageSearch />\n      </button>\n      <input\n        name=\"query\"\n        type=\"text\"\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Search movies\"\n      />\n    </form>\n  </Header>\n);\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\nexport default Searchbar;\n","import { useLocation, useSearchParams } from 'react-router-dom';\nimport { useFetch } from 'tools/apiGet';\nimport Loader from 'components/Loader/Loader';\nimport { toast } from 'react-toastify';\n\nimport Searchbar from 'components/Searchbar/Searchbar';\nimport { useEffect, useState } from 'react';\nimport MoviesList from 'components/MoviesList/MoviesList';\n\nconst Movies = () => {\n  const url = `search/company`;\n\n  const location = useLocation();\n\n  const [searchString, setSearchString] = useSearchParams('');\n  const [options, setOptions] = useState({\n    query: searchString.get('query'),\n    page: 1,\n  });\n\n  const { data, isLoaded, error } = useFetch(url, options);\n\n  const onSubmit = evt => {\n    evt.preventDefault();\n\n    const inputString = evt.currentTarget.elements.query;\n    const inputValue = evt.currentTarget.elements.query.value.trim();\n    if (!inputValue) {\n      toast.error(`Введи `);\n      return;\n    } else if (options.query === inputValue) {\n      toast.error(`Вже шукали \"${inputValue}\" `);\n      inputString.value = '';\n      return;\n    }\n\n    setSearchString({ query: inputValue });\n    setOptions(prev => ({ ...prev, query: inputValue }));\n    inputString.value = '';\n  };\n\n  useEffect(() => {\n    if (data?.total_results <= 0 && options.query) {\n      toast.error('нема нікого !');\n    }\n    // eslint-disable-next-line\n  }, [data]);\n\n  if (error) {\n    toast.error(error);\n  }\n\n  const showList = data?.total_results > 0 && !error;\n  const showLoader = isLoaded && !error;\n  const films = data?.results;\n\n  return (\n    <>\n      <Searchbar onSubmit={onSubmit} />\n      {showLoader && <Loader />}\n      {showList && <MoviesList films={films} location={location} />}\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\nimport { useEffect, useState } from 'react';\n\nexport async function getFetch(url, controller = null, options = null) {\n  let param = {\n    baseURL: 'https://api.themoviedb.org/3/',\n    params: {\n      api_key: '4c5709de239d230c95a29a6c1868ce65',\n    },\n  };\n  if (controller) param.signal = controller.signal;\n  if (options) {\n    param.params = { ...param.params, ...options };\n  }\n  console.log(param);\n  const response = await axios.get(url, param);\n  return response;\n}\n\nexport const useFetch = (url, options = null) => {\n  const [data, setData] = useState(null);\n  const [error, setError] = useState('');\n  const [isLoaded, setIsLoaded] = useState(true);\n\n  useEffect(() => {\n    // if (!url) return;\n\n    const controller = new AbortController();\n    (async () => {\n      try {\n        //if (!url) throw new Error('введи');\n        if (url) {\n          const response = await getFetch(url, controller, options);\n          setData(response.data);\n        }\n      } catch (error) {\n        if (error.message !== 'canceled') {\n          setError(error.message);\n        }\n      } finally {\n        setIsLoaded(false);\n      }\n    })();\n\n    return () => controller.abort();\n  }, [options, url]);\n\n  return { data, error, isLoaded };\n};\n"],"names":["LoaderWrapper","styled","_templateObject","_taggedTemplateLiteral","_jsx","children","RotatingLines","strokeColor","strokeWidth","animationDuration","width","visible","_ref","films","location","map","item","_jsxs","Link","to","concat","id","state","from","name","original_title","Container","Header","_templateObject2","NavLink","_templateObject3","onSubmit","type","MdOutlineImageSearch","autoComplete","autoFocus","placeholder","useLocation","_useSearchParams","useSearchParams","_useSearchParams2","_slicedToArray","searchString","setSearchString","_useState","useState","query","get","page","_useState2","options","setOptions","_useFetch","useFetch","data","isLoaded","error","useEffect","total_results","toast","showList","showLoader","results","_Fragment","Searchbar","evt","preventDefault","inputString","currentTarget","elements","inputValue","value","trim","prev","_objectSpread","Loader","MoviesList","getFetch","_x","_getFetch","apply","arguments","_asyncToGenerator","_regeneratorRuntime","_callee2","url","controller","param","response","_args2","_context2","next","length","undefined","baseURL","params","api_key","signal","console","log","axios","sent","abrupt","stop","setData","_useState3","_useState4","setError","_useState5","_useState6","setIsLoaded","AbortController","_callee","_context","t0","message","finish","abort"],"sourceRoot":""}